/// <reference types="node" />
import Decimal from "decimal.js";
export declare enum RFC_RC {
    RFC_OK = 0,
    RFC_COMMUNICATION_FAILURE = 1,
    RFC_LOGON_FAILURE = 2,
    RFC_ABAP_RUNTIME_FAILURE = 3,
    RFC_ABAP_MESSAGE = 4,
    RFC_ABAP_EXCEPTION = 5,
    RFC_CLOSED = 6,
    RFC_CANCELED = 7,
    RFC_TIMEOUT = 8,
    RFC_MEMORY_INSUFFICIENT = 9,
    RFC_VERSION_MISMATCH = 10,
    RFC_INVALID_PROTOCOL = 11,
    RFC_SERIALIZATION_FAILURE = 12,
    RFC_INVALID_HANDLE = 13,
    RFC_RETRY = 14,
    RFC_EXTERNAL_FAILURE = 15,
    RFC_EXECUTED = 16,
    RFC_NOT_FOUND = 17,
    RFC_NOT_SUPPORTED = 18,
    RFC_ILLEGAL_STATE = 19,
    RFC_INVALID_PARAMETER = 20,
    RFC_CODEPAGE_CONVERSION_FAILURE = 21,
    RFC_CONVERSION_FAILURE = 22,
    RFC_BUFFER_TOO_SMALL = 23,
    RFC_TABLE_MOVE_BOF = 24,
    RFC_TABLE_MOVE_EOF = 25,
    RFC_START_SAPGUI_FAILURE = 26,
    RFC_ABAP_CLASS_EXCEPTION = 27,
    RFC_UNKNOWN_ERROR = 28,
    RFC_AUTHORIZATION_FAILURE = 29,
    RFC_AUTHENTICATION_FAILURE = 30,
    RFC_CRYPTOLIB_FAILURE = 31,
    RFC_IO_FAILURE = 32,
    RFC_LOCKING_FAILURE = 33
}
export declare enum EnumSncQop {
    DigSig = "1",
    DigSigEnc = "2",
    DigSigEncUserAuth = "3",
    BackendDefault = "8",
    Maximum = "9"
}
export declare enum EnumTrace {
    Off = "0",
    Brief = "1",
    Verbose = "2",
    Full = "3"
}
type RfcConnectionParametersAllowed = "ABAP_DEBUG" | "ALIAS_USER" | "ASHOST" | "ASXML" | "CFIT" | "CLIENT" | "CODEPAGE" | "COMPRESSION_TYPE" | "DELTA" | "DEST" | "EXTIDDATA" | "EXTIDTYPE" | "GETSSO2" | "GROUP" | "GWHOST" | "GWSERV" | "LANG" | "LCHECK" | "LOGON_GROUP_CHECK_INTERVAL" | "MAX_REG_COUNT" | "MSHOST" | "MSSERV" | "MYSAPSSO2" | "NO_COMPRESSION" | "ON_CCE" | "PASSWD" | "PASSWORD_CHANGE_ENFORCED" | "PCS" | "PROGRAM_ID" | "PROXY_HOST" | "PROXY_PASSWD" | "PROXY_PORT" | "PROXY_USER" | "R3NAME" | "REG_COUNT" | "SAPLOGON_ID" | "SAPROUTER" | "SERIALIZATION_FORMAT" | "SERVER_NAME" | "SNC_LIB" | "SNC_MODE" | "SNC_MYNAME" | "SNC_PARTNERNAME" | "SNC_PARTNER_NAMES" | "SNC_QOP" | "SNC_SSO" | "SYSID" | "SYSNR" | "SYS_IDS" | "TLS_CLIENT_CERTIFICATE_LOGON" | "TLS_CLIENT_PSE" | "TLS_SERVER_PARTNER_AUTH" | "TLS_SERVER_PSE" | "TLS_TRUST_ALL" | "TPNAME" | "TRACE" | "USER" | "USE_REPOSITORY_ROUNDTRIP_OPTIMIZATION" | "USE_SAPGUI" | "USE_SYMBOLIC_NAMES" | "USE_TLS" | "WSHOST" | "WSPORT" | "X509CERT" | "abap_debug" | "alias_user" | "ashost" | "asxml" | "cfit" | "client" | "codepage" | "compression_type" | "delta" | "dest" | "extiddata" | "extidtype" | "getsso2" | "group" | "gwhost" | "gwserv" | "lang" | "lcheck" | "logon_group_check_interval" | "max_reg_count" | "mshost" | "msserv" | "mysapsso2" | "no_compression" | "on_cce" | "passwd" | "password_change_enforced" | "pcs" | "program_id" | "proxy_host" | "proxy_passwd" | "proxy_port" | "proxy_user" | "r3name" | "reg_count" | "saplogon_id" | "saprouter" | "serialization_format" | "server_name" | "snc_lib" | "snc_mode" | "snc_myname" | "snc_partnername" | "snc_partner_names" | "snc_qop" | "snc_sso" | "sysid" | "sysnr" | "sys_ids" | "tls_client_certificate_logon" | "tls_client_pse" | "tls_server_partner_auth" | "tls_server_pse" | "tls_trust_all" | "tpname" | "trace" | "user" | "use_repository_roundtrip_optimization" | "use_sapgui" | "use_symbolic_names" | "use_tls" | "wshost" | "wsport" | "x509cert";
export declare enum RfcParameterDirection {
    RFC_IMPORT = 1,
    RFC_EXPORT = 2,
    RFC_CHANGING = 3,
    RFC_TABLES = 7
}
export type RfcConnectionParameters = Partial<Record<RfcConnectionParametersAllowed, string>>;
export type RfcVariable = string | number | Buffer | Date | Decimal | Uint8Array | Uint16Array | Uint32Array;
export type RfcArray = Array<RfcVariable>;
export type RfcStructure = {
    [key: string]: RfcVariable | RfcStructure | RfcTable;
};
export type RfcTable = Array<RfcVariable | RfcStructure>;
export type RfcTableOfVariables = Array<RfcVariable>;
export type RfcTableOfStructures = Array<RfcStructure>;
export type RfcParameterValue = RfcVariable | RfcArray | RfcStructure | RfcTable;
export type RfcObject = {
    [key: string]: RfcParameterValue;
};
export declare enum RfcLoggingClass {
    client = 0,
    pool = 1,
    server = 2,
    throughput = 3,
    nwrfc = 4,
    addon = 5
}
export declare enum RfcLoggingLevel {
    none = 0,
    fatal = 1,
    error = 2,
    warning = 3,
    info = 4,
    debug = 5,
    all = 6
}
export declare enum RFC_UNIT_STATE {
    RFC_UNIT_NOT_FOUND = 0,
    RFC_UNIT_IN_PROCESS = 1,
    RFC_UNIT_COMMITTED = 2,
    RFC_UNIT_ROLLED_BACK = 3,
    RFC_UNIT_CONFIRMED = 4
}
export {};
